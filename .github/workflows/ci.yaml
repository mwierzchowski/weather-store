name: CI
on: push
env:
  BUILD_TAG: ghcr.io/${{ github.REPOSITORY }}:build-${{ github.RUN_NUMBER }}

jobs:
#  Test:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set up build
#        uses: s4u/setup-maven-action@v1.3.1
#        with:
#          java-version: '17'
#          java-distribution: 'temurin'
#          maven-version: 3.8.4
#      - name: Check quality
#        run: mvn verify surefire-report:report-only --no-transfer-progress
#
#      - name: Export test report
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: Test report
#          path: ${{ github.WORKSPACE }}/target/site/surefire-report.html
#
#  Build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ github.REPOSITORY_OWNER }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          push: true
#          tags: ${{ env.BUILD_TAG }}
#          cache-from: type=gha,scope=${{ github.WORKFLOW }}
#          cache-to: type=gha,scope=${{ github.WORKFLOW }}
#
#  Verify:
#    runs-on: ubuntu-latest
#    needs:
#      - Build
#      - Test
#    services:
#      postgres:
#        image: postgres
#        env:
#          POSTGRES_DB: dev
#          POSTGRES_USER: dev
#          POSTGRES_PASSWORD: dev
#      redis:
#        image: redis
#    steps:
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Run container
#        run: docker run -d -p 8080:8080 ${{ env.BUILD_TAG }}
#
#      - name: Health check
#        uses: nev7n/wait_for_response@v1
#        with:
#          url: 'http://localhost:8080/actuator/health'
#          responseCode: 200
#          timeout: 20000
#          interval: 500

  Clean:
    runs-on: ubuntu-latest
    permissions:
      packages: delete
#    if: always()
#    needs:
#      - Verify
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug
        run: |
          curl -i \
            -X GET \
            -H 'Authorization: ${{ secrets.GITHUB_TOKEN }}' \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/user/packages/container/weather-store/versions

      - name: Delete image
        run: |
          curl -i \
            -X DELETE \
            -H 'Authorization: ${{ secrets.GITHUB_TOKEN }}' \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/user/packages/container/weather-store/versions/build-118
#      - name: Delete image
#        continue-on-error: true
#        run: docker rmi -f ${{ env.BUILD_TAG }}

