name: CI/CD
on:
  push:
env:
  BUILD_NAME: ghcr.io/${{ github.REPOSITORY }}
  BUILD_TAG: ghcr.io/${{ github.REPOSITORY }}:${{ github.RUN_NUMBER }}
  DOCKER_BUILDKIT: 1

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up build
        uses: s4u/setup-maven-action@v1.3.1
        with:
          java-version: '17'
          java-distribution: 'temurin'
          maven-version: 3.8.4

      - name: Build and test
        run: |
          mvn jacoco:prepare-agent verify surefire-report:report-only jacoco:report \
            --no-transfer-progress

      - name: Publish test report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test report
          path: ${{ github.WORKSPACE }}/target/site/surefire-report.html

      - name: Export test coverage
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          JACOCO_SOURCE_PATH: ${{ github.WORKSPACE }}/src/main/java
        with:
          coverageLocations: ${{ github.WORKSPACE }}/target/site/jacoco/jacoco.xml:jacoco

  image-check:
    name: Image Check
    runs-on: ubuntu-latest
    env:
      OPENAPI_SPEC: ${{ github.WORKSPACE }}/openapi.json
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ github.REPOSITORY_OWNER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Run test env
        run: |
          docker-compose -f docker-compose.srv.yml -f docker-compose.app.yml up -d

      - name: Health check
        uses: nev7n/wait_for_response@v1
        with:
          url: 'http://localhost:8080/actuator/health'
          responseCode: 200
          timeout: 20000
          interval: 1000

      - name: Download API Spec
        run: |
          wget http://localhost:8080/v3/api-docs --output-document ${{ env.OPENAPI_SPEC }}            

      - name: Publish API Spec
        uses: actions/upload-artifact@v3
        with:
          name: API Spec
          path: ${{ env.OPENAPI_SPEC }}

  release:
    name: Release
    if: github.ref == 'refs/heads/main'
    needs:
      - build-and-test
      - image-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ github.REPOSITORY_OWNER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.REPOSITORY_OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.BUILD_TAG }}
          cache-from: type=gha
          cache-to: type=gha

  cleanup-test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ github.REPOSITORY_OWNER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.REPOSITORY_OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove old releases
        uses: snok/container-retention-policy@v1
        with:
          image-names: ${{ env.BUILD_NAME }}
          cut-off: 1 second ago UTC+1
          account-type: personal
          keep-at-least: 1
          skip-tags: latest
          token: ${{ secrets.PACKAGES_PAT }}